#!/bin/bash
# Manages the script manage_my_process.
#   When passed the argument `start`:
#     1. Starts manage_my_process
#     2. Creates a file containing its PID in /var/run/my_process.pid
#     3. Displays "manage_my_process started"
#   When passed the argument `stop`:
#     1. Stops manage_my_process
#     2. Deletes the file /var/run/my_process.pid
#     3. Displays "manage_my_process stopped"
#   When passed the argument `restart`:
#     1. Stops manage_my_process
#     2. Deletes the file /var/run/my_process.pid
#     3. Starts manage_my_process
#     4. Creates a file containing its PID in /var/run/my_process.pid
#     5. Displays "manage_my_process restarted"
#   If any other or no arguments are passed, displays
#+  "Usage: manage_my_process {start|stop|restart}"

PID_FILE="/var/run/my_process.pid"
MANAGE_SCRIPT="./manage_my_process"

case "$1" in
  "start")
    $MANAGE_SCRIPT &
    echo "$!" > "$PID_FILE"
    echo "manage_my_process started"
    ;;

  "stop")
    if [ -f "$PID_FILE" ]; then
      echo "manage_my_process stopped"
      kill "$(cat "$PID_FILE")"
      rm "$PID_FILE"
    else
      echo "manage_my_process is not running"
    fi
    ;;

  "restart")
    if [ -f "$PID_FILE" ]; then
      echo "manage_my_process stopped"
      kill "$(cat "$PID_FILE")"
      rm "$PID_FILE"
    else
      echo "manage_my_process is not running"
    fi

    $MANAGE_SCRIPT &
    echo "$!" > "$PID_FILE"
    echo "manage_my_process restarted"
    ;;

  *)
    echo "Usage: manage_my_process {start|stop|restart}"
    ;;
esac
